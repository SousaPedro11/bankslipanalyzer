name: Python linting workflow

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string

jobs:
  linting:
    if: github.event.pull_request.draft == false

    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: cache-${{ inputs.project }}-venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Outdated dependencies
        run: poetry show -o

      - name: Lint with black
        run: |
          source .venv/bin/activate
          poetry run black --check -v --diff .

